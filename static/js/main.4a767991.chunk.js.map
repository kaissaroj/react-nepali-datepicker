{"version":3,"sources":["../../src/helpers/calendardata.tsx","../../src/helpers/secondaryHelpers.tsx","../../src/components/calendarHeader.tsx","../../src/components/calendarWeek.tsx","../../src/components/calendarDates.tsx","../../src/helpers/index.tsx","../../src/index.tsx","App.js","index.js"],"names":["calendarData","bsMonths","bsDays","nepaliNumbers","bsMonthUpperDays","extractedBsMonthData","minBsYear","maxBsYear","minAdDateEqBsDate","ad","year","month","date","bs","validationFunctions","value","requiredParameters","ReferenceError","Object","bsYear","TypeError","RangeError","adYear","bsMonth","adMonth","bsDate","adDate","numberParameters","key","calendarFunctions","getBsMonthDays","yearCount","totalYears","bsMonthData","i","bsMonthUpperDaysIndex","getMonthDaysNumFormMinBsYear","yearDiff","monthDaysFromMinBsYear","getTotalDaysNumFromMinBsYear","daysNumFromMinBsYear","diffYears","getAdDateByBsDate","Date","getBsDateByAdDate","bsMonthFirstAdDate","bsMonthDays","getNepaliNumber","prefixNum","Math","number","suffixNum","getNumberByNepaliNumber","nepaliNumber","Error","numIndex","getBsMonthInfoByBsDate","dateFormatPattern","eqAdDate","weekDay","formattedDate","getBsYearByAdDate","getBsMonthByAdDate","bsDateFormat","parseFormattedBsDate","dateFormat","dateFormattedText","diffTextNum","extractedFormattedBsDate","bsDay","valueOf","endChar","tempText","endIndex","React","changeMonth","monthYearText","setMonthYearText","getMonthYearText","monthName","className","styles","topContainer","routeButton","onClick","monthIndicator","dayofweek","index","dayofweekchild","calendarDetails","onDateClick","selectedDay","current","other","dateLists","setDateLists","temp","weekCoverInMonth","datePickerData","preMonth","preYear","preMonthDays","calendarBody","k","calendarDate","isCurrentMonthDate","_getCalendarBody","currentDay","dategrid","customClassName","customCurrentDay","day","selectedButtonClass","onDateChange","dateFormatted","selectedDate","setSelectedDate","_showDatePicker","setDatePicker","selectedDayMonth","setSelectedDay","undefined","setCalendarDetails","details","currentDate","currentBsDate","_getCalendarInitialDetails","dateContainer","container","rel","type","readOnly","placeholder","dateinput","calendar","nextMonth","nextYear","nextDate","_renderNextMonthCalendar","prevMonth","prevYear","prevDate","_renderPreviousMonthCalendar","selectedDateDetails","App","useState","dateDetails","setDateDetails","keys","length","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a767991.chunk.js","sourcesContent":["export const calendarData = {\n  bsMonths: [\n    'बैशाख',\n    'जेठ',\n    'असार',\n    'सावन',\n    'भदौ',\n    'असोज',\n    'कार्तिक',\n    'मंसिर',\n    'पौष',\n    'माघ',\n    'फागुन',\n    'चैत'\n  ],\n  bsDays: ['आईत', 'सोम', 'मंगल', 'बुध', 'बिही', 'शुक्र', 'शनि'],\n  nepaliNumbers: ['०', '१', '२', '३', '४', '५', '६', '७', '८', '९'],\n  bsMonthUpperDays: [\n    [30, 31],\n    [31, 32],\n    [31, 32],\n    [31, 32],\n    [31, 32],\n    [30, 31],\n    [29, 30],\n    [29, 30],\n    [29, 30],\n    [29, 30],\n    [29, 30],\n    [30, 31]\n  ],\n  extractedBsMonthData: [\n    [\n      0,\n      1,\n      1,\n      22,\n      1,\n      3,\n      1,\n      1,\n      1,\n      3,\n      1,\n      22,\n      1,\n      3,\n      1,\n      3,\n      1,\n      22,\n      1,\n      3,\n      1,\n      19,\n      1,\n      3,\n      1,\n      1,\n      3,\n      1,\n      2,\n      2,\n      1,\n      3,\n      1\n    ],\n    [\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      3,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      1,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      1,\n      2\n    ],\n    [\n      0,\n      1,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      3,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      1,\n      1,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      1,\n      2\n    ],\n    [\n      1,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      2,\n      2,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      1,\n      2\n    ],\n    [59, 1, 26, 1, 28, 1, 2, 1, 12],\n    [\n      0,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      5,\n      1,\n      1,\n      2,\n      2,\n      1,\n      3,\n      1,\n      2,\n      1,\n      2\n    ],\n    [\n      0,\n      12,\n      1,\n      3,\n      1,\n      3,\n      1,\n      5,\n      1,\n      11,\n      1,\n      3,\n      1,\n      3,\n      1,\n      18,\n      1,\n      3,\n      1,\n      3,\n      1,\n      18,\n      1,\n      3,\n      1,\n      3,\n      1,\n      27,\n      1,\n      2\n    ],\n    [\n      1,\n      2,\n      2,\n      2,\n      2,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      3,\n      1,\n      3,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      2,\n      2,\n      2,\n      15,\n      2,\n      4\n    ],\n    [\n      0,\n      1,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      3,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      15,\n      2,\n      4\n    ],\n    [\n      1,\n      1,\n      3,\n      1,\n      3,\n      1,\n      14,\n      1,\n      3,\n      1,\n      1,\n      1,\n      3,\n      1,\n      14,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      18,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      14,\n      1,\n      3,\n      15,\n      1,\n      2,\n      1,\n      1\n    ],\n    [\n      0,\n      1,\n      1,\n      3,\n      1,\n      3,\n      1,\n      10,\n      1,\n      3,\n      1,\n      3,\n      1,\n      1,\n      1,\n      3,\n      1,\n      3,\n      1,\n      10,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      14,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      10,\n      1,\n      20,\n      1,\n      1,\n      1\n    ],\n    [\n      1,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      3,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      3,\n      1,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      2,\n      1,\n      3,\n      1,\n      3,\n      1,\n      20,\n      3\n    ]\n  ],\n  minBsYear: 1970,\n  maxBsYear: 2100,\n  minAdDateEqBsDate: {\n    ad: {\n      year: 1913,\n      month: 3,\n      date: 13\n    },\n    bs: {\n      year: 1970,\n      month: 1,\n      date: 1\n    }\n  }\n}\n","import { calendarData } from './calendardata'\n\nexport const validationFunctions = {\n  validateRequiredParameters: function (requiredParameters: object) {\n    for (let key in requiredParameters) {\n      const value = requiredParameters[key]\n      if (typeof value === 'undefined' || value === null) {\n        throw new ReferenceError(\n          'Missing required parameters: ' +\n            Object.keys(requiredParameters).join(', ')\n        )\n      }\n    }\n  },\n  validateBsYear: function (bsYear: any) {\n    if (typeof bsYear !== 'number' || bsYear === null) {\n      throw new TypeError('Invalid parameter bsYear value')\n    } else if (\n      bsYear < calendarData.minBsYear ||\n      bsYear > calendarData.maxBsYear\n    ) {\n      throw new RangeError(\n        'Parameter bsYear value should be in range of ' +\n          calendarData.minBsYear +\n          ' to ' +\n          calendarData.maxBsYear\n      )\n    }\n  },\n  validateAdYear: function (adYear: any) {\n    if (typeof adYear !== 'number' || adYear === null) {\n      throw new TypeError('Invalid parameter adYear value')\n    } else if (\n      adYear < calendarData.minBsYear - 57 ||\n      adYear > calendarData.maxBsYear - 57\n    ) {\n      throw new RangeError(\n        'Parameter adYear value should be in range of ' +\n          (calendarData.minBsYear - 57) +\n          ' to ' +\n          (calendarData.maxBsYear - 57)\n      )\n    }\n  },\n  validateBsMonth: function (bsMonth: any) {\n    if (typeof bsMonth !== 'number' || bsMonth === null) {\n      throw new TypeError('Invalid parameter bsMonth value')\n    } else if (bsMonth < 1 || bsMonth > 12) {\n      throw new RangeError(\n        'Parameter bsMonth value should be in range of 1 to 12'\n      )\n    }\n  },\n  validateAdMonth: function (adMonth: any) {\n    if (typeof adMonth !== 'number' || adMonth === null) {\n      throw new TypeError('Invalid parameter adMonth value')\n    } else if (adMonth < 1 || adMonth > 12) {\n      throw new RangeError(\n        'Parameter adMonth value should be in range of 1 to 12'\n      )\n    }\n  },\n  validateBsDate: function (bsDate: any) {\n    if (typeof bsDate !== 'number' || bsDate === null) {\n      throw new TypeError('Invalid parameter bsDate value')\n    } else if (bsDate < 1 || bsDate > 32) {\n      throw new RangeError(\n        'Parameter bsDate value should be in range of 1 to 32'\n      )\n    }\n  },\n  validateAdDate: function (adDate: any) {\n    if (typeof adDate !== 'number' || adDate === null) {\n      throw new TypeError('Invalid parameter adDate value')\n    } else if (adDate < 1 || adDate > 31) {\n      throw new RangeError(\n        'Parameter adDate value should be in range of 1 to 31'\n      )\n    }\n  },\n  validatePositiveNumber: function (numberParameters: any) {\n    for (let key in numberParameters) {\n      const value = numberParameters[key]\n      if (typeof value !== 'number' || value === null || value < 0) {\n        throw new ReferenceError(\n          'Invalid parameters: ' + Object.keys(numberParameters).join(', ')\n        )\n      } else if (\n        key === 'yearDiff' &&\n        value > calendarData.maxBsYear - calendarData.minBsYear + 1\n      ) {\n        throw new RangeError(\n          'Parameter yearDiff value should be in range of 0 to ' +\n            (calendarData.maxBsYear - calendarData.minBsYear + 1)\n        )\n      }\n    }\n  }\n}\nexport const calendarFunctions = {\n  getBsMonthDays: function (bsYear: any, bsMonth: any) {\n    validationFunctions.validateRequiredParameters({\n      bsYear: bsYear,\n      bsMonth: bsMonth\n    })\n    validationFunctions.validateBsYear(bsYear)\n    validationFunctions.validateBsMonth(bsMonth)\n\n    var yearCount = 0\n    var totalYears = bsYear + 1 - calendarData.minBsYear\n    var bsMonthData = calendarData.extractedBsMonthData[bsMonth - 1]\n    for (var i = 0; i < bsMonthData.length; i++) {\n      if (bsMonthData[i] === 0) {\n        continue\n      }\n\n      var bsMonthUpperDaysIndex = i % 2\n      yearCount += bsMonthData[i]\n      if (totalYears <= yearCount) {\n        if (\n          (bsYear === 2085 && bsMonth === 5) ||\n          (bsYear === 2088 && bsMonth === 5)\n        ) {\n          return (\n            calendarData.bsMonthUpperDays[bsMonth - 1][bsMonthUpperDaysIndex] -\n            2\n          )\n        } else {\n          return calendarData.bsMonthUpperDays[bsMonth - 1][\n            bsMonthUpperDaysIndex\n          ]\n        }\n      }\n    }\n\n    return null\n  },\n  getMonthDaysNumFormMinBsYear: function (bsMonth: any, yearDiff: any) {\n    validationFunctions.validateRequiredParameters({\n      bsMonth: bsMonth,\n      yearDiff: yearDiff\n    })\n    validationFunctions.validateBsMonth(bsMonth)\n    validationFunctions.validatePositiveNumber({ yearDiff: yearDiff })\n\n    var yearCount = 0\n    var monthDaysFromMinBsYear = 0\n    if (yearDiff === 0) {\n      return 0\n    }\n\n    var bsMonthData = calendarData.extractedBsMonthData[bsMonth - 1]\n    for (var i = 0; i < bsMonthData.length; i++) {\n      if (bsMonthData[i] === 0) {\n        continue\n      }\n\n      var bsMonthUpperDaysIndex = i % 2\n      if (yearDiff > yearCount + bsMonthData[i]) {\n        yearCount += bsMonthData[i]\n        monthDaysFromMinBsYear +=\n          calendarData.bsMonthUpperDays[bsMonth - 1][bsMonthUpperDaysIndex] *\n          bsMonthData[i]\n      } else {\n        monthDaysFromMinBsYear +=\n          calendarData.bsMonthUpperDays[bsMonth - 1][bsMonthUpperDaysIndex] *\n          (yearDiff - yearCount)\n        yearCount = yearDiff - yearCount\n        break\n      }\n    }\n\n    return monthDaysFromMinBsYear\n  },\n  getTotalDaysNumFromMinBsYear: function (\n    bsYear: any,\n    bsMonth: any,\n    bsDate: any\n  ) {\n    validationFunctions.validateRequiredParameters({\n      bsYear: bsYear,\n      bsMonth: bsMonth,\n      bsDate: bsDate\n    })\n    validationFunctions.validateBsYear(bsYear)\n    validationFunctions.validateBsMonth(bsMonth)\n    validationFunctions.validateBsDate(bsDate)\n\n    if (bsYear < calendarData.minBsYear || bsYear > calendarData.maxBsYear) {\n      return null\n    }\n\n    var daysNumFromMinBsYear = 0\n    var diffYears = bsYear - calendarData.minBsYear\n    for (var month = 1; month <= 12; month++) {\n      if (month < bsMonth) {\n        daysNumFromMinBsYear += calendarFunctions.getMonthDaysNumFormMinBsYear(\n          month,\n          diffYears + 1\n        )\n      } else {\n        daysNumFromMinBsYear += calendarFunctions.getMonthDaysNumFormMinBsYear(\n          month,\n          diffYears\n        )\n      }\n    }\n\n    if (bsYear > 2085 && bsYear < 2088) {\n      daysNumFromMinBsYear += bsDate - 2\n    } else if (bsYear === 2085 && bsMonth > 5) {\n      daysNumFromMinBsYear += bsDate - 2\n    } else if (bsYear > 2088) {\n      daysNumFromMinBsYear += bsDate - 4\n    } else if (bsYear === 2088 && bsMonth > 5) {\n      daysNumFromMinBsYear += bsDate - 4\n    } else {\n      daysNumFromMinBsYear += bsDate\n    }\n\n    return daysNumFromMinBsYear\n  },\n  getAdDateByBsDate: function (bsYear: any, bsMonth: any, bsDate: any) {\n    validationFunctions.validateRequiredParameters({\n      bsYear: bsYear,\n      bsMonth: bsMonth,\n      bsDate: bsDate\n    })\n    validationFunctions.validateBsYear(bsYear)\n    validationFunctions.validateBsMonth(bsMonth)\n    validationFunctions.validateBsDate(bsDate)\n    var daysNumFromMinBsYear =\n      calendarFunctions.getTotalDaysNumFromMinBsYear(bsYear, bsMonth, bsDate) ||\n      0\n    var adDate = new Date(\n      calendarData.minAdDateEqBsDate.ad.year,\n      calendarData.minAdDateEqBsDate.ad.month,\n      calendarData.minAdDateEqBsDate.ad.date - 1\n    )\n    adDate.setDate(adDate.getDate() + daysNumFromMinBsYear)\n    return adDate\n  },\n  getBsDateByAdDate: function (adYear: any, adMonth: any, adDate: any) {\n    validationFunctions.validateRequiredParameters({\n      adYear: adYear,\n      adMonth: adMonth,\n      adDate: adDate\n    })\n    validationFunctions.validateAdYear(adYear)\n    validationFunctions.validateAdMonth(adMonth)\n    validationFunctions.validateAdDate(adDate)\n\n    var bsYear = adYear + 57\n    var bsMonth = (adMonth + 9) % 12\n    bsMonth = bsMonth === 0 ? 12 : bsMonth\n    var bsDate = 1\n\n    if (adMonth < 4) {\n      bsYear -= 1\n    } else if (adMonth === 4) {\n      var bsYearFirstAdDate = calendarFunctions.getAdDateByBsDate(bsYear, 1, 1)\n      if (adDate < bsYearFirstAdDate.getDate()) {\n        bsYear -= 1\n      }\n    }\n\n    var bsMonthFirstAdDate = calendarFunctions.getAdDateByBsDate(\n      bsYear,\n      bsMonth,\n      1\n    )\n    if (adDate >= 1 && adDate < bsMonthFirstAdDate.getDate()) {\n      bsMonth = bsMonth !== 1 ? bsMonth - 1 : 12\n      var bsMonthDays = calendarFunctions.getBsMonthDays(bsYear, bsMonth) || 0\n      bsDate = bsMonthDays - (bsMonthFirstAdDate.getDate() - adDate) + 1 || 0\n    } else {\n      bsDate = adDate - bsMonthFirstAdDate.getDate() + 1\n    }\n\n    return {\n      bsYear: bsYear,\n      bsMonth: bsMonth,\n      bsDate: bsDate\n    }\n  },\n\n  getNepaliNumber: function (number: number) {\n    var prefixNum: number = Math.floor(number / 10)\n    var suffixNum: number = number % 10\n    if (prefixNum !== 0) {\n      const value: string =\n        calendarFunctions.getNepaliNumber(prefixNum) +\n        calendarData.nepaliNumbers[suffixNum]\n      return value\n    } else {\n      const value: string = calendarData.nepaliNumbers[suffixNum]\n      return value\n    }\n    return null\n  },\n  /**\n   * Return equivalent number from nepaliNumber\n   * @param {String} nepaliNumber\n   * @returns {Number} number\n   */\n  getNumberByNepaliNumber: function (nepaliNumber: any) {\n    if (typeof nepaliNumber === 'undefined') {\n      throw new Error('Parameter nepaliNumber is required')\n    } else if (typeof nepaliNumber !== 'string') {\n      throw new Error('Parameter nepaliNumber should be in string')\n    }\n\n    var number = 0\n    for (var i = 0; i < nepaliNumber.length; i++) {\n      var numIndex = calendarData.nepaliNumbers.indexOf(nepaliNumber.charAt(i))\n      if (numIndex === -1) {\n        throw new Error('Invalid nepali number')\n      }\n      number = number * 10 + numIndex\n    }\n\n    return number\n  },\n  getBsMonthInfoByBsDate: function (\n    bsYear: any,\n    bsMonth: any,\n    bsDate: any,\n    dateFormatPattern: any\n  ) {\n    validationFunctions.validateRequiredParameters({\n      bsYear: bsYear,\n      bsMonth: bsMonth,\n      bsDate: bsDate\n    })\n    validationFunctions.validateBsYear(bsYear)\n    validationFunctions.validateBsMonth(bsMonth)\n    validationFunctions.validateBsDate(bsDate)\n    if (dateFormatPattern === null) {\n      dateFormatPattern = '%D, %M %d, %y'\n    } else if (typeof dateFormatPattern !== 'string') {\n      throw new TypeError('Invalid parameter dateFormatPattern value')\n    }\n\n    var daysNumFromMinBsYear =\n      calendarFunctions.getTotalDaysNumFromMinBsYear(bsYear, bsMonth, bsDate) ||\n      0\n    var adDate = new Date(\n      calendarData.minAdDateEqBsDate.ad.year,\n      calendarData.minAdDateEqBsDate.ad.month,\n      calendarData.minAdDateEqBsDate.ad.date - 1\n    )\n    adDate.setDate(adDate.getDate() + daysNumFromMinBsYear)\n\n    var bsMonthFirstAdDate = calendarFunctions.getAdDateByBsDate(\n      bsYear,\n      bsMonth,\n      1\n    )\n    var bsMonthDays = calendarFunctions.getBsMonthDays(bsYear, bsMonth) || 0\n    bsDate = bsDate > bsMonthDays ? bsMonthDays : bsDate\n    var eqAdDate = calendarFunctions.getAdDateByBsDate(bsYear, bsMonth, bsDate)\n    var weekDay = eqAdDate.getDay() + 1\n    var formattedDate = calendarFunctions.bsDateFormat(\n      dateFormatPattern,\n      bsYear,\n      bsMonth,\n      bsDate\n    )\n    return {\n      bsYear: bsYear,\n      bsMonth: bsMonth,\n      bsDate: bsDate,\n      weekDay: weekDay,\n      formattedDate: formattedDate,\n      adDate: eqAdDate,\n      bsMonthFirstAdDate: bsMonthFirstAdDate,\n      bsMonthDays: bsMonthDays\n    }\n  },\n  getBsYearByAdDate: function (adYear: any, adMonth: any, adDate: any) {\n    validationFunctions.validateRequiredParameters({\n      adYear: adYear,\n      adMonth: adMonth,\n      adDate: adDate\n    })\n    validationFunctions.validateAdYear(adYear)\n    validationFunctions.validateAdMonth(adMonth)\n    validationFunctions.validateAdDate(adDate)\n\n    var bsDate = calendarFunctions.getBsDateByAdDate(adYear, adMonth, adDate)\n    return bsDate.bsYear\n  },\n  getBsMonthByAdDate: function (adYear: any, adMonth: any, adDate: any) {\n    validationFunctions.validateRequiredParameters({\n      adYear: adYear,\n      adMonth: adMonth,\n      adDate: adDate\n    })\n    validationFunctions.validateAdYear(adYear)\n    validationFunctions.validateAdMonth(adMonth)\n    validationFunctions.validateAdDate(adDate)\n\n    var bsDate = calendarFunctions.getBsDateByAdDate(adYear, adMonth, adDate)\n    return bsDate.bsMonth\n  },\n  bsDateFormat: function (\n    dateFormatPattern: any,\n    bsYear: any,\n    bsMonth: any,\n    bsDate: any\n  ) {\n    validationFunctions.validateRequiredParameters({\n      dateFormatPattern: dateFormatPattern,\n      bsYear: bsYear,\n      bsMonth: bsMonth,\n      bsDate: bsDate\n    })\n    validationFunctions.validateBsYear(bsYear)\n    validationFunctions.validateBsMonth(bsMonth)\n    validationFunctions.validateBsDate(bsDate)\n\n    var eqAdDate = calendarFunctions.getAdDateByBsDate(bsYear, bsMonth, bsDate)\n    var weekDay = eqAdDate.getDay() + 1\n    var formattedDate = dateFormatPattern\n    formattedDate = formattedDate.replace(\n      /%d/g,\n      calendarFunctions.getNepaliNumber(bsDate)\n    )\n    formattedDate = formattedDate.replace(\n      /%y/g,\n      calendarFunctions.getNepaliNumber(bsYear)\n    )\n    formattedDate = formattedDate.replace(\n      /%m/g,\n      calendarFunctions.getNepaliNumber(bsMonth)\n    )\n    formattedDate = formattedDate.replace(\n      /%M/g,\n      calendarData.bsMonths[bsMonth - 1]\n    )\n    formattedDate = formattedDate.replace(\n      /%D/g,\n      calendarData.bsDays[weekDay - 1]\n    )\n    return formattedDate\n  },\n  parseFormattedBsDate: function (dateFormat: any, dateFormattedText: any) {\n    validationFunctions.validateRequiredParameters({\n      dateFormat: dateFormat,\n      dateFormattedText: dateFormattedText\n    })\n\n    var diffTextNum = 0\n    var extractedFormattedBsDate: any = {\n      bsYear: null,\n      bsMonth: null,\n      bsDate: null,\n      bsDay: null\n    }\n\n    for (var i = 0; i < dateFormat.length; i++) {\n      if (dateFormat.charAt(i) === '%') {\n        var valueOf = dateFormat.substring(i, i + 2)\n        var endChar = dateFormat.charAt(i + 2)\n        var tempText = dateFormattedText.substring(i + diffTextNum)\n        var endIndex =\n          endChar !== '' ? tempText.indexOf(endChar) : tempText.length\n        var value = tempText.substring(0, endIndex)\n\n        if (valueOf === '%y') {\n          extractedFormattedBsDate.bsYear = calendarFunctions.getNumberByNepaliNumber(\n            value\n          )\n          diffTextNum += value.length - 2\n        } else if (valueOf === '%d') {\n          extractedFormattedBsDate.bsDate = calendarFunctions.getNumberByNepaliNumber(\n            value\n          )\n          diffTextNum += value.length - 2\n        } else if (valueOf === '%D') {\n          extractedFormattedBsDate.bsDay =\n            calendarData.bsDays.indexOf(value) + 1\n          diffTextNum += value.length - 2\n        } else if (valueOf === '%m') {\n          extractedFormattedBsDate.bsMonth = calendarFunctions.getNumberByNepaliNumber(\n            value\n          )\n          diffTextNum += value.length - 2\n        } else if (valueOf === '%M') {\n          extractedFormattedBsDate.bsMonth =\n            calendarData.bsMonths.indexOf(value) + 1\n          diffTextNum += value.length - 2\n        }\n      }\n    }\n\n    if (!extractedFormattedBsDate.bsDay) {\n      var eqAdDate = calendarFunctions.getAdDateByBsDate(\n        extractedFormattedBsDate.bsYear,\n        extractedFormattedBsDate.bsMonth,\n        extractedFormattedBsDate.bsDate\n      )\n      extractedFormattedBsDate.bsDay = eqAdDate.getDay() + 1\n    }\n\n    return extractedFormattedBsDate\n  }\n}\n","import React from 'react'\nimport styles from '../styles.module.css'\nimport { calendarData } from '../helpers/calendardata'\nimport { calendarFunctions } from '../helpers/secondaryHelpers'\n\ninterface Interface {\n  bsMonth: number\n  bsYear: number\n  changeMonth: Function\n}\n\nconst CalendarHeader: React.SFC<Interface> = ({\n  bsMonth,\n  bsYear,\n  changeMonth\n}) => {\n  const [monthYearText, setMonthYearText] = React.useState<string>('')\n  React.useEffect(() => {\n    bsMonth > 0 && bsYear > 0 && getMonthYearText()\n  }, [bsMonth])\n  const getMonthYearText = () => {\n    var monthName = calendarData.bsMonths[bsMonth - 1]\n    var year = calendarFunctions.getNepaliNumber(bsYear)\n    setMonthYearText(`${monthName} ${year}`)\n  }\n  return (\n    <div className={styles.topContainer}>\n      <a className={styles.routeButton} onClick={() => changeMonth('prev')}>\n        &#x25C0;\n      </a>\n      <div className={styles.monthIndicator}>{monthYearText}</div>\n      <a className={styles.routeButton} onClick={() => changeMonth('next')}>\n        &#x25B6;\n      </a>\n    </div>\n  )\n}\n\nexport default React.memo(CalendarHeader)\n","import React from 'react'\nimport styles from '../styles.module.css'\nimport { calendarData } from '../helpers/calendardata'\n\ninterface Interface {}\n\nconst CalendarWeek: React.SFC<Interface> = ({}) => {\n  const { bsDays } = calendarData\n  return (\n    <div className={styles.dayofweek}>\n      {bsDays.map((name, index) => {\n        return (\n          <div key={`week-${index}`} className={styles.dayofweekchild}>\n            {name}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default React.memo(CalendarWeek)\n","import React from 'react'\nimport styles from '../styles.module.css'\nimport { _getCalendarBody } from '../helpers/index'\nimport { calendarFunctions } from '../helpers/secondaryHelpers'\ninterface CalendarDetailsInterface {\n  bsYear: number\n  bsMonth: number\n  bsDate: number\n  weekDay: number\n  formattedDate: string | undefined\n  adDate: Date | undefined\n  bsMonthFirstAdDate: Date | undefined\n  bsMonthDays: number | undefined\n}\ninterface Interface {\n  calendarDetails: CalendarDetailsInterface\n  onDateClick: Function\n  selectedDay: number | undefined\n}\n\nconst CalendarWeek: React.SFC<Interface> = ({\n  calendarDetails,\n  onDateClick,\n  selectedDay\n}) => {\n  const [dateLists, setDateLists] = React.useState<any>({\n    current: [],\n    other: []\n  })\n  React.useEffect(() => {\n    const temp = _getCalendarBody(calendarDetails)\n\n    setDateLists(temp)\n  }, [calendarDetails])\n\n  const { weekDay, bsDate } = calendarDetails\n  const currentDay = calendarFunctions.getNepaliNumber(bsDate)\n  const { current } = dateLists\n  return (\n    <div className={styles.dategrid}>\n      {current.map((day: any, index: any) => {\n        const customClassName = index === 0 ? `firstday${weekDay}` : ''\n        const customCurrentDay = day === currentDay ? `currentday` : ''\n        const selectedButtonClass =\n          !!selectedDay && selectedDay === index + 1 ? `selected` : ''\n        return (\n          <button\n            className={`${styles.dategridbutton} ${\n              styles[selectedButtonClass]\n            } ${styles[customClassName] ? styles[customClassName] : ''}`}\n            key={`${day}-${index}`}\n            onClick={() => onDateClick(index + 1)}\n          >\n            <time className={styles[customCurrentDay]}>{day}</time>\n          </button>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default React.memo(CalendarWeek)\n","import { calendarFunctions } from './secondaryHelpers'\nimport { calendarData } from './calendardata'\n\nexport const _getCalendarInitialDetails = (\n  currentMonthIndex: number,\n  dateFormat: any\n) => {\n  const currentDate = new Date()\n  const currentBsDate = calendarFunctions.getBsDateByAdDate(\n    currentDate.getFullYear(),\n    currentDate.getMonth() + 1,\n    currentDate.getDate()\n  )\n  const bsYear = currentBsDate.bsYear\n  const bsMonth = currentBsDate.bsMonth + currentMonthIndex\n  const bsDate = currentBsDate.bsDate\n  const minBsDate = calendarFunctions.getBsMonthInfoByBsDate(\n    bsYear,\n    bsMonth,\n    bsDate,\n    dateFormat\n  )\n  return minBsDate\n}\nexport const _renderNextMonthCalendar = (\n  bsMonth: number,\n  bsYear: number,\n  bsDate: number,\n  dateFormat: any\n) => {\n  var nextMonth = bsMonth + 1 <= 12 ? bsMonth + 1 : 1\n  var nextYear = nextMonth !== 1 ? bsYear : bsYear + 1\n  var nextDate = bsDate\n\n  const minBsDate = calendarFunctions.getBsMonthInfoByBsDate(\n    nextYear,\n    nextMonth,\n    nextDate,\n    dateFormat\n  )\n  return minBsDate\n}\nexport const _renderPreviousMonthCalendar = (\n  bsMonth: number,\n  bsYear: number,\n  bsDate: number,\n  dateFormat: any\n) => {\n  var prevMonth = bsMonth - 1 > 0 ? bsMonth - 1 : 12\n  var prevYear = prevMonth !== 12 ? bsYear : bsYear - 1\n  var prevDate = bsDate\n  const minBsDate = calendarFunctions.getBsMonthInfoByBsDate(\n    prevYear,\n    prevMonth,\n    prevDate,\n    dateFormat\n  )\n  return minBsDate\n}\n\nexport const _getCalendarBody = function (datePickerData: any) {\n  var weekCoverInMonth = Math.ceil(\n    (datePickerData.bsMonthFirstAdDate.getDay() + datePickerData.bsMonthDays) /\n      7\n  )\n\n  var preMonth =\n    datePickerData.bsMonth - 1 !== 0 ? datePickerData.bsMonth - 1 : 12\n  var preYear =\n    preMonth === 12 ? datePickerData.bsYear - 1 : datePickerData.bsYear\n  var preMonthDays: any =\n    preYear >= calendarData.minBsYear\n      ? calendarFunctions.getBsMonthDays(preYear, preMonth)\n      : 30\n  var calendarBody: any = { other: [], current: [] }\n  for (var i = 0; i < weekCoverInMonth; i++) {\n    for (var k = 1; k <= 7; k++) {\n      var calendarDate = i * 7 + k - datePickerData.bsMonthFirstAdDate.getDay()\n      var isCurrentMonthDate = true\n      if (calendarDate <= 0) {\n        calendarDate = preMonthDays + calendarDate\n        isCurrentMonthDate = false\n      } else if (calendarDate > datePickerData.bsMonthDays) {\n        calendarDate = calendarDate - datePickerData.bsMonthDays\n        isCurrentMonthDate = false\n      }\n\n      if (isCurrentMonthDate) {\n        calendarBody.current.push(\n          calendarFunctions.getNepaliNumber(calendarDate)\n        )\n      } else {\n        calendarBody.other.push(calendarFunctions.getNepaliNumber(calendarDate))\n      }\n    }\n  }\n\n  return calendarBody\n}\n","import * as React from 'react'\nimport styles from './styles.module.css'\nimport './style.css'\nimport CalendarHeader from './components/calendarHeader'\nimport CalendarWeek from './components/calendarWeek'\nimport CalendarDates from './components/calendarDates'\nimport { calendarFunctions } from './helpers/secondaryHelpers'\n\nimport {\n  _getCalendarInitialDetails,\n  _renderNextMonthCalendar,\n  _renderPreviousMonthCalendar\n} from './helpers'\ntype onDateSelectInterface = (date: object) => object | undefined\ninterface Interface {\n  dateFormat: string | undefined\n  onDateChange: onDateSelectInterface\n}\n\ninterface CalendarDetailsInterface {\n  bsYear: number\n  bsMonth: number\n  bsDate: number\n  weekDay: number\n  formattedDate: string | undefined\n  adDate: Date | undefined\n  bsMonthFirstAdDate: Date | undefined\n  bsMonthDays: number | undefined\n}\n\nconst DatePicker: React.SFC<Interface> = ({ dateFormat, onDateChange }) => {\n  const dateFormatted = dateFormat || '%D, %M %d, %y'\n  const [selectedDate, setSelectedDate] = React.useState<string>('')\n  const [_showDatePicker, setDatePicker] = React.useState<boolean>(false)\n  const [selectedDayMonth, setSelectedDay] = React.useState<any>({\n    day: -1,\n    month: -1\n  })\n  const [calendarDetails, setCalendarDetails] = React.useState<\n    CalendarDetailsInterface\n  >({\n    bsYear: 0,\n    bsMonth: 0,\n    bsDate: 0,\n    weekDay: 0,\n    formattedDate: undefined,\n    adDate: undefined,\n    bsMonthFirstAdDate: undefined,\n    bsMonthDays: undefined\n  })\n  const { bsMonth, bsYear, bsDate } = calendarDetails\n  React.useEffect(() => {\n    const details = _getCalendarInitialDetails(0, dateFormatted)\n    setCalendarDetails(details)\n  }, [])\n  const changeMonth = (type: string) => {\n    let details: any = calendarDetails\n    if (type === 'next') {\n      details = _renderNextMonthCalendar(bsMonth, bsYear, bsDate, dateFormatted)\n    }\n    if (type === 'prev') {\n      details = _renderPreviousMonthCalendar(\n        bsMonth,\n        bsYear,\n        bsDate,\n        dateFormatted\n      )\n    }\n    setCalendarDetails(details)\n  }\n  const onDateClick = (day: number) => {\n    const selectedDateDetails: any = calendarFunctions.getBsMonthInfoByBsDate(\n      bsYear,\n      bsMonth,\n      day,\n      dateFormatted\n    )\n    setSelectedDate(selectedDateDetails.formattedDate)\n    setDatePicker(false)\n    onDateChange(selectedDateDetails)\n    setSelectedDay({\n      day: day,\n      month: bsMonth\n    })\n  }\n  const selectedDay =\n    selectedDayMonth.month === calendarDetails.bsMonth\n      ? selectedDayMonth.day\n      : undefined\n  return bsYear == 0 ? (\n    <React.Fragment></React.Fragment>\n  ) : (\n    <div className={styles.dateContainer}>\n      <div className={styles.container}>\n        <div className={styles.rel}>\n          <input\n            type='text'\n            readOnly={true}\n            placeholder='Select Date'\n            onClick={() => setDatePicker(!_showDatePicker)}\n            className={styles.dateinput}\n            value={selectedDate}\n          />\n        </div>\n        <div className={styles.rel}>\n          <div\n            className={`${styles.nepdatemain} ${\n              !_showDatePicker ? styles.hide : ''\n            }`}\n          >\n            <div className={styles.calendar}>\n              <CalendarHeader {...{ bsMonth, bsYear, changeMonth }} />\n              <CalendarWeek />\n              <CalendarDates\n                {...{ calendarDetails, onDateClick, selectedDay }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default DatePicker\n","import React from 'react'\n\nimport DatePicker from 'react-nepali-datepicker'\nimport 'react-nepali-datepicker/dist/index.css'\nimport './index.css'\n\nconst App = () => {\n  const [dateDetails, setDateDetails] = React.useState({})\n  return (\n    <div className='container'>\n      <h1>React Nepali DatePicker Example</h1>\n      <DatePicker\n        dateFormat={'%y %M, %d'}\n        onDateChange={(date) => setDateDetails(date)}\n      />\n      <p>Date Format : '%y %M, %d'</p>\n      {Object.keys(dateDetails).length > 0 && (\n        <>\n          <p>\n            <strong>onDateChange Response:</strong>\n          </p>{' '}\n          {JSON.stringify(dateDetails)}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}